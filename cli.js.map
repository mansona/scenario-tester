{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":";AAEA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzB,aAAa,CAAC,CAAC,EAAE,+BAA+B,CAAC;KACjD,OAAO,CACN,MAAM,EACN,mDAAmD,EACnD,KAAK,CAAC,EAAE,CACN,KAAK;KACF,MAAM,CAAC,OAAO,EAAE;IACf,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,+BAA+B;IAC5C,YAAY,EAAE,IAAI;CACnB,CAAC;KACD,KAAK,CAAC,OAAO,CAAC;KACd,MAAM,CAAC,SAAS,EAAE;IACjB,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,wDAAwD;CACtE,CAAC;KACD,KAAK,CAAC,SAAS,CAAC;KAChB,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EACzC,KAAK,EAAC,IAAI,EAAC,EAAE;IACX,IAAI,GAAG,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC;IACpC,MAAM,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC5B,CAAC,CACF;KACA,OAAO,CACN,QAAQ,EACR,uGAAuG,EACvG,KAAK,CAAC,EAAE,CACN,KAAK;KACF,MAAM,CAAC,UAAU,EAAE;IAClB,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,gFAAgF;IAC7F,YAAY,EAAE,IAAI;CACnB,CAAC;KACD,MAAM,CAAC,QAAQ,EAAE;IAChB,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,wBAAwB;IACrC,OAAO,EAAE,QAAQ;CAClB,CAAC;KACD,MAAM,CAAC,OAAO,EAAE;IACf,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,+BAA+B;IAC5C,YAAY,EAAE,IAAI;CACnB,CAAC;KACD,KAAK,CAAC,OAAO,CAAC;KACd,MAAM,CAAC,SAAS,EAAE;IACjB,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,wDAAwD;CACtE,CAAC;KACD,KAAK,CAAC,SAAS,CAAC,EACrB,KAAK,EAAC,IAAI,EAAC,EAAE;IACX,IAAI,GAAG,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC;IACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,CAAC,CACF;KACA,IAAI,EAAE,CAAC,IAAI,CAAC","sourcesContent":["#!/usr/bin/env node\n\nimport yargs from 'yargs';\n\nyargs(process.argv.slice(2))\n  .demandCommand(1, 'Use one of the above commands')\n  .command(\n    'list',\n    'List all the scenarios defined in your test suite',\n    yargs =>\n      yargs\n        .option('files', {\n          type: 'string',\n          description: 'globs for all your test files',\n          demandOption: true,\n        })\n        .array('files')\n        .option('require', {\n          type: 'string',\n          description: 'module(s) to require before we try to load your tests.',\n        })\n        .array('require')\n        .option('matrix', { type: 'string' }),\n    async argv => {\n      let mod = await import('./list.js');\n      await mod.printList(argv);\n    }\n  )\n  .command(\n    'output',\n    'Write out one of your test scenario apps as a real app on disk, so you can inspect, debug, and run it',\n    yargs =>\n      yargs\n        .option('scenario', {\n          type: 'string',\n          description: 'Name of scenario. The first scenario to contain this substring will be chosen.',\n          demandOption: true,\n        })\n        .option('outdir', {\n          type: 'string',\n          description: 'Where to write the app',\n          default: 'output',\n        })\n        .option('files', {\n          type: 'string',\n          description: 'globs for all your test files',\n          demandOption: true,\n        })\n        .array('files')\n        .option('require', {\n          type: 'string',\n          description: 'module(s) to require before we try to load your tests.',\n        })\n        .array('require'),\n    async argv => {\n      let mod = await import('./output.js');\n      await mod.output(argv);\n    }\n  )\n  .help().argv;\n"]}